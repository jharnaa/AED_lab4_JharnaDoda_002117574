/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import model.Encounter;
import model.EncounterHistory;
import model.Patient;
import model.PatientDirectory;
import model.PersonDirectory;
import model.VitalSigns;

/**
 *
 * @author jharnadoda
 */
public class TakeVitalsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form TakeVitalsJPanel
     */
    
    PersonDirectory personDirect;
    PatientDirectory pd;
    EncounterHistory encounterHist;
    
    public TakeVitalsJPanel(PersonDirectory personDirect,PatientDirectory pd,EncounterHistory encounterHist) {
        initComponents();
        
        this.personDirect = personDirect;
        this.pd = pd;
        this.encounterHist = encounterHist;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtHR = new javax.swing.JTextField();
        txtWeight = new javax.swing.JTextField();
        txtBP = new javax.swing.JTextField();
        txtTemp = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        txtFirstName = new javax.swing.JTextField();
        lblFirstName = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtBP2 = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 255));

        lblTitle.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Add Encounter Details (VITALS)");

        jLabel2.setText("Weight(kg)");

        jLabel3.setText("Heart Rate");

        jLabel4.setText("Systolic Blood Pressure Level");

        jLabel5.setText("Body Temperature");

        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        txtFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstNameActionPerformed(evt);
            }
        });

        lblFirstName.setText("First Name");

        jLabel6.setText("Diastolic Blood Pressure Level");

        txtBP2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBP2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addGap(355, 355, 355))
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(68, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtBP2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtHR, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 136, Short.MAX_VALUE)
                            .addComponent(txtBP, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblFirstName)
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(205, 205, 205))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstName)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtHR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBP2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(40, 40, 40)
                .addComponent(btnSave)
                .addGap(150, 150, 150))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        
        if(txtFirstName.getText().isEmpty()==true)
        {
            JOptionPane.showMessageDialog(this, "Please enter Name");
            return;
        }
        
        
        
        
        if(txtWeight.getText().isEmpty()==true)
        {
            JOptionPane.showMessageDialog(this, "Please enter weight");
            return;
        }
         String wt=txtWeight.getText();boolean flag=true;
         
         for(int i=0;i<wt.length();i++)
         {
             char ch=wt.charAt(i);
             if(Character.isDigit(ch)==true)
             {
                 continue;
             }
             else
             {
                 flag=false;
                 break;
             }

         }
         if(flag==false)
         {
              JOptionPane.showMessageDialog(this, "Please enter valid weight(only digits)");
            return;
         }
         
         
         if(txtHR.getText().isEmpty()==true)
        {
            JOptionPane.showMessageDialog(this, "Please enter Heart Rate");
            return;
        }
         
         
         
         String hr=txtHR.getText();
         boolean flag1=true;
         
         for(int i=0;i<hr.length();i++)
         {
             char ch=hr.charAt(i);
             if(Character.isDigit(ch)==true)
             {
                 continue;
             }
             else
             {
                 flag1=false;
                 break;
             }

         }
         if(flag1==false)
         {
              JOptionPane.showMessageDialog(this, "Please enter valid heart rate (only digits)");
            return;
         }
         
         
         
         
         
          if(txtBP.getText().isEmpty()==true)
        {
            JOptionPane.showMessageDialog(this, "Please enter Blood Pressure");
            return;
        }
         
         String bp=txtBP.getText();
         boolean flag2=true;
         
         for(int i=0;i<bp.length();i++)
         {
             char ch=bp.charAt(i);
             if(Character.isDigit(ch)==true)
             {
                 continue;
             }
             else
             {
                 flag2=false;
                 break;
             }

         }
         if(flag2==false)
         {
              JOptionPane.showMessageDialog(this, "Please enter valid blood pressure (only digits)");
            return;
         }
         
         
          if(txtBP2.getText().isEmpty()==true)
        {
            JOptionPane.showMessageDialog(this, "Please enter Blood Pressure");
            return;
        }
         
         
         
         String bp2=txtBP2.getText();
         boolean flag3=true;
         
         for(int i=0;i<bp2.length();i++)
         {
             char ch=bp2.charAt(i);
             if(Character.isDigit(ch)==true)
             {
                 continue;
             }
             else
             {
                 flag3=false;
                 break;
             }

         }
         if(flag3==false)
         {
              JOptionPane.showMessageDialog(this, "Please enter valid blood pressure (only digits)");
            return;
         }
         
         
          if(txtTemp.getText().isEmpty()==true)
        {
            JOptionPane.showMessageDialog(this, "Please enter Body Temperature");
            return;
        }
         
         
         String t=txtTemp.getText();
         boolean flag4=true;
         
         for(int i=0;i<t.length();i++)
         {
             char ch=t.charAt(i);
             if(Character.isDigit(ch)==true)
             {
                 continue;
             }
             else
             {
                 flag4=false;
                 break;
             }

         }
         if(flag4==false)
         {
              JOptionPane.showMessageDialog(this, "Please enter valid temp (only digits)");
            return;
         }
        
        
        
        String firstName = txtFirstName.getText();
        
        Patient person = pd.getPatientDetails().get(firstName);
        
        Encounter e = new Encounter();
        VitalSigns vitals = person.addNewVitals();
        
       
        vitals.setHeartRate(Double.parseDouble(txtHR.getText()));
        vitals.setdBloodPressure(Double.parseDouble(txtBP2.getText())); 
        vitals.setsBloodPressure(Double.parseDouble(txtBP.getText()));
        vitals.setTemp(Double.parseDouble(txtTemp.getText()));
        vitals.setWeight(Double.parseDouble(txtWeight.getText()));
        
        
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("MM/DD/YYYY hh:mm:ss");
        LocalDateTime now = LocalDateTime.now();
        e.setDate(now); 
        
        JOptionPane.showMessageDialog(this, "Patient Vitals added!");
        

        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstNameActionPerformed

    private void txtBP2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBP2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBP2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtBP;
    private javax.swing.JTextField txtBP2;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtHR;
    private javax.swing.JTextField txtTemp;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
